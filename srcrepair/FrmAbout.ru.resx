<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconApp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAG4AAABuCAYAAADGWyb7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAbroAAG66AdbesRcAAAAHdElNRQfhCB8MIAnMhAvtAAAV1klEQVR4Xu1dB3hUxRaO
        9BqqQEInIQIJoYM8mihFxIK8h4pY8amgFKUXKRI6kSogRQUBsSCCqKBPRRAFlCZdgmKhBAJISQIpeN75
        585l7+5Owr137yYB9v++/5vNZu+ZmXN2Zs6cKRsUQAABBBBAAAEEEEAAAQQQQAAB3OSg/hoDuA6QkaH4
        /WBmOeZtzIbM25lNZdqYWZ8ZzaxznbAms6SsngD/fX1BVWB+D8YYwfyAuYMZzzzDPM+8wLxoIP6+3oh6
        JDA3MwcyK8iq50wDolDGgvHrW5i5mEWZdzOXMM8x6SbjP8yFzLJSNTkDXCBPg+VjhjLvZC5iXmKqKnSz
        8XfmPcxcUk/ZA2RszJxf52dibIph7mGqCn+zM5HZXeor+8GFQFeI7gDjlarAAbp4mfmQ1FvWwZgZv4a3
        t5qJwVhVyADVPMusLnXofxgz4dcTmPCiVAUL8NrcKFXpH3AGbuC/WzGPyMwd4i1EA5hI++dyEe9dfV/1
        3HVNOG0dpU79BxZemNmPiT5aVZDM2Y/5MnMAG2RoMNGIEKKYSkTTmhItfopoZT+itSOI1k8m+n4W0TcT
        iD4bTrTiJaK3uhLFNiB6tTLRK+WIhhRmmWxMyINcVX45n5gmrJTqdRYsWE+rM+HaqwqQMaHUPkhZyWPD
        iWa3YUP0Idr2HtGpQ0TpqWQJKUlEJ/YT/TCf6L0eRDNbEI2uSPQS59FX5qcqR85lHPPqBN1nsDDwFvka
        Lv42pipjNaHAXsyhxYnefJDo2xlEf2wlSr0sLeAQLl8gittI9OV4ojfacWsuQPSioRw5n3DqOgml+woW
        JChfd2Ri4qjKVE0YbCAr8OP+REc2EyWdkVr2M84fJzq0nujdZ7gF5tbKoSpfziKGnX6atn0ACzEa7Qnm
        KaYqQ29ivIGyPuYx6czvRGkOty6zSE0mOraH6O2HZDcty5dzOU7TuE2wgKvg1w8yzc/NML5MYefh2G6p
        PXM4dTKeZowfTT27daF7bm9ALaPCqFGVslS3fAlqEhZKd9QOp/tbNKE+T3ejubETaPOGb+jiBe4e6R9N
        wLWwexU7QeVzuvGmSrX7BhbUjGnO3YdChpciWjeWdXlFassb6elpdCYhgVJS3FvhmYRTFF48P0UUz0s1
        ShWgmqXBglTr1oIixd81Smn/r1o4iMrnCaLqxfLQfc0a0YLpsXRw7x66cP4c/fNPJoa8ks6OzPNa941e
        QVWP7OVEqXrr4If1NJK5WwrMnGhlsQ2J9n4uNeSNtLRU2v/zLnpr9gzqcHs9Wrf6I/kfFzq3biYMVOvW
        QtdmmULCoBEl8lKFfEFUrUhuevz+drRiySKKO3hASswA25bx9IM9W3igqvpkDxG77KFp3yL4QT0twtzA
        VGXgTnhuS58gSvhNasUbP2/7kcYO6UctIqtRpQJBFF4sN/V7ludrHpj72iQKK5JLbahrsiCFFc1FlQsG
        Ucem9WjmhBg6/EsmBkRX/nrrnGQ8OH6RmgUsgh/UU3PzNBjt01eILmGsMUB2V5eSk2n8sIHUKiqcqnMX
        d1uJfFcVfWed28RnjIg7uJ8qsmHdDWKd6E4jiucTBpw3bQq39jSZgwfOHSVa+IDWY6jql7Vcq2nfIvhB
        Pe3NxExeJdxFeGlfv6Z5bgps/OoLalO/FkWVLUI1Sub3Um79SqW569wpP+1Ck/CKYozz/LwdQg7yf7TD
        nXTkME/yVUD5Fz+m1UdVz6whpgJdpf7NQ/8wp3WZWG5XCXcRA/ua4TzYq7/J6PJqhxRTKlNnnfLFaf60
        WPmEC4N7PiO6PNUzdnlbyQJUJ7QEbVr/tcxFgXn3ZmfLO6JZwILh9A8iZX7JVAl2ESGrxTymKUJUF86f
        pxEv9aKw4NzSI1QrUmfPbv+RT7rw5ZpVFJrb9+7SmwWpQv4gWjAjlp1LhdcLj3N60+wa83rrNjAF4wf5
        dXcmNuWoBGtES5vZkujyRVlbF06fOilaC5wDKEmtPBfRjXX8V31KiI+XEjTEnzjOXas+FVA/a5eR7IlW
        4fKNHzaIkhITZY4GXDhJNLluVrc8eJMFpRnMgR/Q0yrMH5kqwRphtFGhRCe9x4qkixfpxccfpor8jVYp
        TEUYplmNSrT+C/cpRHJSInW9uzV7nnmUzzlBOC6j+vWmZJXx4jbwRL1MVra8WdIG1sAPYPdVXykkY2Lw
        PrBO1s4dL3TrwvMoe+PSnNgJUoqGtNRUmjUxRszNVJ93gtqEvhDFvjqcUi4rwnHf8Ng7iCfpKj04zwhp
        CmvgB0OYmW/o6cn8jN1+BQb17G67W8NY+PIzj4tpgxHfr/9KREdUzzjFmtxVR5TITyvffcc72pKeQjS7
        bVaEx9Yx80lTmAc/hNb2uBSiJrrImDCixNOyVi4sXfAGe4cllIoxwwie13Vq1Zh+PXRQStSAiXPrOhHs
        DXpPI5ykiNKULkJx+/fLnA349TuiIcXUOnGOnZnYc2oN/EAh5gGmSqhGdJG7EJ5y/1bu3bWDWkdX92nO
        hZZaJ7Q4bfzfF1KqhnNnz1KfJ7va7n6tEJP1tvUj6bKqy1z+nD9b3SGmtYVTfkBP20ghasK7mteR6GKC
        rImGS8lJ1P/Zpyg82HcHAiGwt16fTleuuLvoGPuqFblF+YyTjCxTWJRh0itDZM4GYHF2SLBaN75zHDO/
        ZgmT4Af0dI0Uoiai6FsWyVq4sO6TlRRVLtiRCEfVwrdQ7ycfofPn/pbSNXz56WpqUPlW2+OnFWKaUKNU
        Idq+ZbPM3YB1Mf5YiP2beZe0gTXwA7cy05kqwdrYNqM5t7ZTsgYasHTSrWMbx1oDxrFmNSrT8aN/yRw0
        YNy7v3lDv49zOvEFQb28kHyOaFgpp7vMtUxxiodTc9A/yOlgpkqoxkH5iNaOkaXXAO/ryzUfi65FVXm7
        xPxvy8ZvZS4a0tPT6flHOlGVQkE8DuVxpHVfiw2rlKHPP/ZebqLPRvKcR6Eje0xlDtSsYAP88E6DMG9i
        y9zxPbLkGjAOdb6jqRjQVRW3SxhuJs/dPMe5Ve+/S32fepT++1AnatsgUrSKsKLmwml2iGB4j0c6y9wN
        OLHPySA0dnPVlDawBn6gIhOhFpVgjbNaylK7sGfndiqf1/n5FZZ8Hm7fOuPlF4mki4m06r1l1KVNCzEN
        cdqACLXBU962+XuZo0TyWW3tzvdQGFZdPpRmMA9+SE+fZGaymTU30XdzZKldgIuORVBVpe0Q3V8kll3u
        uYu2fLch820HHvhizSqeAzYRMuwaEM9hDA0Pzi3SRlXLUZt6NWnl8mUyFwkEoDfMdKK7TGZa37Gsf5jT
        +cwrTJVwZh6iM3/IUmtAaKh2ueJKBdghlBYdUowmjxpKSYneQWsz+PvMaRrR90XRdZvd8gBDw1AYp2tw
        Gdo1jKRnH3qAJo0cQqs/WE6//xqnbvnY7jeAx33fnJQDmgVsggV87yHQnWOqy9K6sO6TjxyZt+mEAufG
        TvQa16wiNSWFpo0bRVUz8XJvK5lPrFqE5gmiuhVK0ZOd2tO0saPZEVkhAgnn/3afiihx8heiKXV9DT6L
        fZOcWgc/VJaZcbQEBXv/OVlaF/o/97RjY0r1YnlpWO/npWTfkcgtdnjfHiK+iTkZ8sAmIrQqENskRg/o
        I9b6fjt8iE4nnKLUVItb3rGU9U43X5wUeJOFpRmsgx/Ggfk/pTBvYrL501JZWhfaN4ryMoAdoktrUava
        NR0Rqzi4bw91aFLn6qpCt3vb0pIFc+jI4TixFTCd87Myhirx6RBfHJSF0gT2wAIQ2DxtEOhODMB/7pAl
        1RB//Cg1qFzWywh2CNf/68/XSMnOYsP/1gmmpabId8zjCs8bL1+6ROf+PktbN22kD5e8LUJ7bvhuLuuI
        x3+V3q5Nezu4dLCAnswkg0B34ht16bwsqYaffthE9SqUVhrCCrEa0K5RbbN7j/0OrIIf/eN32r39J1q6
        YC69+NhD1KBSGSrLasKmJWzcdcNOnpwPL2nHQdnEtL4KYAQ/jIgJ+lvvDFCgobfKUrqwYtkiHtTtL9/o
        RGubP32K712WD4g/dpS+//YbWrZwHr3Styfd36KRmApgZzTCePr0ombpwuKzbvh1g3aOz7rhHmGKE0+2
        wQLGGgS6E/HJMRGylC7MmjSOokMz37VlhjAcvt1ZibT0NNr101Z6e85MGtyzO0/07xBbJsLZQdLCaZhK
        eDtdlbishw96rNP9tZ1oPHvc1gyHLfwVNe37ABYyxSDUnTDchPqylC5MHDGMaocEe1XOCvFNhit+7E/3
        +aE/kHAyntZ8uJwGPt+d7mvegJrXrCIOj6Crxn4TlEVVRiPh5Pzs+SWLP8jKiLRqOJyPt7Z8owILmW4Q
        6k5MBaZ5h7rGDOpHUeWKKitoluiOmrM3GX/smJTqHxzav5fqVSxLtcsFi82wWrdnfRqDLYI4EeQGHBmb
        XE/7gqv0503sURXLNz6DBVk23KsD7RlOV5hQYKlC1LZhNJ2MPyGl+gf7d+9io/k+HsNwWzaul1IlrBvu
        U2ZpqXrfwIIsd5WTRg431VWiCxJnBLh1YYt5q6gw6ty6KY3s11tMARIvepwx8AO2btpA0SG+h+ZEV7nt
        RylVwlpXmcb0xY90Bwuz7JzMnjJe6ZygReGMGsJJONCBw4eP8cR3xEsv0LtvLaBf9rsvC2UFlsyb7Ygj
        hYhL3IF9UqqENefE/vKNCizE8nTgo2WLedwoKSqE1iQOFuYN4i4wmB5u15LHwJfFuTTM93BAMTvxUvfH
        xD4ST0NYoRgXOfUaj81PB7B8s0yq3BmwQMsT8B1bN1N4iQJUgec6TSMq0YDnnqKV7y4RAdoTPNdBxCEn
        4MzpBBH2suOMGIkvZ8vIMF8m4FjrbC/17QxYkOWQF84FvDV7Ou37eYdYgsESj52oPjYErVz+jogf+gOL
        uZuE268yhhVizRGnW7G/xg3mQ177pLqdAwu1FWS2AkRGcHT4ErfEg3t3i2NXD2LLQ8kCVInHw04tG8tP
        OgccFunW8S7hHKmMYYUIFMSOVmxPNx9k7iV17RxYmK1lnWsB3SUmvr/s30effIDJ79N0e0RFMRZioNdP
        o2L8QWhp/gzvs3F2gY1FMyeMEftRPI1gh3C2PlmxnP4xRlXNL+vgMroCUt3OggVbXkhVAY7Ijh+3iCjF
        +OED6ZH2rdgwRUTcDw6M6iSqzsgyRcVCphNYwc4TpgCZ5WeWmNLgeo7dO9iDNML8QuprUsfOQRfGqeWt
        C0BKSgq3qL304TtvU8zgl+npzh3FFADdE1oVjkaZdQzwOSjo/cVvSun2sHDmVGpQpawjXSSI07DPdnmA
        x3UP79j81oVKmpYdBAvVU1ubhbAtvHmtqmKHMeJ+mMOZiftlRC1+WZKG9ekh9o9YwZG4X6jXEw+LlgYv
        UCXfDrE6//qkcTIXCfObhd5n+rZ8kxlYsK3tebt3/CT2bagqbJdoeRj3GlcLoaljR3kvpShw4uhRurtx
        PU1GaW+ZdokvUuvoCNq2eZPMScL89rwWzKsNxC9g4bY2xN7forHYz6GquK9EKw4Lzkv3NK0voi+L35gl
        IiHH//pTlsCFLnc1U8rwhdhX2ePRf8scDDC3IRZ+gzNxSRVYuJ7a2oK+bvVKMZ6pKu4U0fXpl82U4qJO
        GT1clsCFmMH9RfBa9bxdalvQFQ6TuS3oLzLFdfR+BWdi79DHuXPUtUNrqlbU/0egQNzfdXfjOjJ3F3CP
        SlRZ35aajESXjTirF8wd+viVGS316j/owjm1dcxq7aoVwp3HcVyVEpwm5mcJp07K3DVcvnyJvckyys9b
        prgXrDDt5KmNF8wds5rHzKtp1Y/gTPTU1sHG5KQk6vfME45ukM2MMNxKnqt54vH72pmefmRE/WDj5JFD
        pVQDzB1sxFm3rP3tAM7I9lHi3du3USuew/kyHTBLtOznu3o7DUvnz/E5WiKOEjeM8uUo8bdMcQCf06wB
        Z+TT4f0l8+dS3VDfg7pm2LR6eXhHMmcNfx75TWz4UX3eDNFa0UXGHbB9eB9TqielLrMWnKFP12VgiQd3
        hqgU4yRx4GS75/EnRstIe61euy4jn1hr9NouaP66jD1SjVkPztznC2p6dP0Pe5n+vSEBm3+mxoySObqA
        MwFWjzWLcZG/bFNGDfP1gppuUodZCz1DTn26EirRxpVQdghnxBM/rP/acjQHW/RGvtxLfZ+X+SuhNmja
        ywZw5lfBr32/hO2F/5q+hM0q0Upw/6Xnvkzs9ccWCjPn43CSpzKPiWOH9Pf1EjZsTXBuP4kd6BkjZfp0
        7eHFC+dpVP/eYprgq5uuYpOwEPr0ow9kbhrQ1XXvfI84rKh6xkjs3HrjtYnigIcXrF17OJSZfUbToReA
        U0cuGsV1uk6eXtWJLwPGJSOwiIoLbrAGqHoGRAyydkhx2uBxg5EbzF80uovpv5ikVXBh9NSRq303ffMV
        tW0QJcJSTixwgljve+7hTpQofm/AhZ1btwgHxbOVw9vEwi7OC3jeF3YV1q72xZe6taapHAQulJ46cpk2
        urGJrwymO2pXF6638TJtO0TwuUOTaLFb2QgclWrfqLbIA59DCgekw+11xX6X1IzOy1m7TBtxXQTmdR3l
        HBgK5ej19bhmY9zQAeI2dGwWql7cXqgMLQq3NKz1iODjFz9w/WJIriDhHMFgM8a/Soc8N7QaYf36+hXM
        olI/OQ96oTh1+Acj0ujAnt20aM5MeqBlYzF1AHGwXmWkjAjDzBg/hnA02Ihlb86nLm1b0AeL32SDKSIh
        Rlj/wQj8gleo1EvOBxfSDz/Rkk5nTyeIWOfUMSPEjUG4iA0eH8Yp7B3B2ITWpY9Z4jW/hyUeBISxDQ87
        yoxITk4S1yVmemjS3k+0HGWGSH3kbMMZC8ev/fqjSFDz6ZMn6eu1a2hqzEixAt2xaQNxwL9x1XLiBiHx
        o0jREXQffhTpqUdp0dyZ3ptVrwV7P4qEH5m/eiiRX+d8oJB6QTm9GX+GDC2tlqz/9QUUWC80pzfTD/9t
        Z0bJel+fQMGZN9NPbeKC6xqi8jcCuDJ6eiP/uG0ss5xWU1edbxhwhW60n5PGrXb3MsUhe05vLKN5Vob/
        vhF+wB2BhspMvU43NowV5Ne4EgKnVFSKyYlELBZeYy+mXoebB8bK8uto5mqm+Tlf9vAP5hJmuCz6zWW0
        jMBKuJu5kBnPVCkuu3iYOYPZXBZVGAy8aeGpAH6dn4mpQwwz841I/ucW5iBmfVk8Af47AB1QhlEh/Dof
        M5R5JxNTiEtMlXKd5hkmLuLBlwdb7fPIIgUMlhmgHKOC+DXOjGE3WVFme+abTHRdKqXbIZyNfcypTATG
        CzJzM93g+XcAJqBSGr9XmglDDmcuZeJeR0wvcCsEArxYcdaJvxEvhcHXM9GC+zNxJq24FHkV/F4AWQlW
        OLpXGDSMWYtZm1mDWY1ZkplbftQN/H7AWNkBq0oPGCqAAAIIIIAAAggggAACCCCAAAJwAEFB/wflysGe
        xPC6XwAAAABJRU5ErkJggg==
</value>
  </data>
</root>