//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace srcrepair {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CVList {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CVList() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("srcrepair.CVList", typeof(CVList).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binds a key with a command..
        /// </summary>
        internal static string bind {
            get {
                return ResourceManager.GetString("bind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes the map..
        /// </summary>
        internal static string changelevel {
            get {
                return ResourceManager.GetString("changelevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns question whether to blacklist a server after leaving after a short amount of time off/on..
        /// </summary>
        internal static string cl_ask_blacklist_opt_out {
            get {
                return ResourceManager.GetString("cl_ask_blacklist_opt_out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns question whether to favorite a server after leaving after a longer amount of time off/on..
        /// </summary>
        internal static string cl_ask_favorite_opt_out {
            get {
                return ResourceManager.GetString("cl_ask_favorite_opt_out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns automatic reloading off/on..
        /// </summary>
        internal static string cl_autoreload {
            get {
                return ResourceManager.GetString("cl_autoreload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns Sniper Rifle re-zoom off/on..
        /// </summary>
        internal static string cl_autorezoom {
            get {
                return ResourceManager.GetString("cl_autorezoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - burning gibs off/on..
        /// </summary>
        internal static string cl_burninggibs {
            get {
                return ResourceManager.GetString("cl_burninggibs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets crosshair picture. &quot;&quot; is standard-crosshairs..
        /// </summary>
        internal static string cl_crosshair_file {
            get {
                return ResourceManager.GetString("cl_crosshair_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hides/shows the HUD - sv_cheats 1 required..
        /// </summary>
        internal static string cl_drawhud {
            get {
                return ResourceManager.GetString("cl_drawhud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - sets viewmodels normal/inverted(left-handed) - does not work while connected to a server..
        /// </summary>
        internal static string cl_flipviewmodels {
            get {
                return ResourceManager.GetString("cl_flipviewmodels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create identity for dedicated server..
        /// </summary>
        internal static string cl_gameserver_create_identity {
            get {
                return ResourceManager.GetString("cl_gameserver_create_identity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List all of the game server accounts owned by the currently logged in Steam account..
        /// </summary>
        internal static string cl_gameserver_list {
            get {
                return ResourceManager.GetString("cl_gameserver_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets how far character models are interpolated (drawn away from their actual position) in the world, a good standard value for hitscan weapons is 0.034..
        /// </summary>
        internal static string cl_interp {
            get {
                return ResourceManager.GetString("cl_interp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns new, better looking impact effects off/on, most noticeable on glass..
        /// </summary>
        internal static string cl_new_impact_effects {
            get {
                return ResourceManager.GetString("cl_new_impact_effects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns ragdoll collisions on/off..
        /// </summary>
        internal static string cl_ragdoll_collide {
            get {
                return ResourceManager.GetString("cl_ragdoll_collide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets time until ragdolls disappear..
        /// </summary>
        internal static string cl_ragdoll_fade_time {
            get {
                return ResourceManager.GetString("cl_ragdoll_fade_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns color-coded items in backpack off/on..
        /// </summary>
        internal static string cl_showbackpackrarities {
            get {
                return ResourceManager.GetString("cl_showbackpackrarities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1/2 - shows framerate (off/real-time/rounded)..
        /// </summary>
        internal static string cl_showfps {
            get {
                return ResourceManager.GetString("cl_showfps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - shows the map coordinates and movement speed of the player..
        /// </summary>
        internal static string cl_showpos {
            get {
                return ResourceManager.GetString("cl_showpos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows non-standard items being carried by player you&apos;re spectating..
        /// </summary>
        internal static string cl_spec_carrieditems {
            get {
                return ResourceManager.GetString("cl_spec_carrieditems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the speed at which your character turns when using the +left and +right commands..
        /// </summary>
        internal static string cl_yawspeed {
            get {
                return ResourceManager.GetString("cl_yawspeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View complete cvar list..
        /// </summary>
        internal static string cvarlist {
            get {
                return ResourceManager.GetString("cvarlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brings up a toolbox for replays (Shift+F2 will also bring up the tool box)..
        /// </summary>
        internal static string demoui {
            get {
                return ResourceManager.GetString("demoui", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop the flag or intelligence..
        /// </summary>
        internal static string dropitem {
            get {
                return ResourceManager.GetString("dropitem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops source recorder..
        /// </summary>
        internal static string endmovie {
            get {
                return ResourceManager.GetString("endmovie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute config file..
        /// </summary>
        internal static string exec {
            get {
                return ResourceManager.GetString("exec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit suicide by exploding into gibs..
        /// </summary>
        internal static string explode {
            get {
                return ResourceManager.GetString("explode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to F search function that displays all commands with searched term..
        /// </summary>
        internal static string find {
            get {
                return ResourceManager.GetString("find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 70-90 - set desired field of view (higher values show more of the battlefield at the cost of fps)..
        /// </summary>
        internal static string fov_desired {
            get {
                return ResourceManager.GetString("fov_desired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tells the source recorder to record at a constant framerate..
        /// </summary>
        internal static string host_framerate {
            get {
                return ResourceManager.GetString("host_framerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use in conjunction with host_framerate to produce a smooth video output..
        /// </summary>
        internal static string host_timescale {
            get {
                return ResourceManager.GetString("host_timescale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns the damage text above enemies off/on..
        /// </summary>
        internal static string hud_combattext {
            get {
                return ResourceManager.GetString("hud_combattext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the amount of healing done per second..
        /// </summary>
        internal static string hud_combattext_healing {
            get {
                return ResourceManager.GetString("hud_combattext_healing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this to fix various HUD-color errors or lingering Crit-effects..
        /// </summary>
        internal static string hud_reloadscheme {
            get {
                return ResourceManager.GetString("hud_reloadscheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deals given amount of damage (can be negative for extra health). Requires sv_cheats 1..
        /// </summary>
        internal static string hurtme {
            get {
                return ResourceManager.GetString("hurtme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force team (red/blue/auto/spectator). Use this if you are stuck in &quot;dead spectator&quot; mode when too many people attempt to join a team at the same time..
        /// </summary>
        internal static string jointeam {
            get {
                return ResourceManager.GetString("jointeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Take a jpeg screenshot..
        /// </summary>
        internal static string jpeg {
            get {
                return ResourceManager.GetString("jpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit suicide..
        /// </summary>
        internal static string kill {
            get {
                return ResourceManager.GetString("kill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes the map and restarts the server..
        /// </summary>
        internal static string map {
            get {
                return ResourceManager.GetString("map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display list of maps..
        /// </summary>
        internal static string maps {
            get {
                return ResourceManager.GetString("maps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for automatic team balancing..
        /// </summary>
        internal static string mp_autoteambalance {
            get {
                return ResourceManager.GetString("mp_autoteambalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for respawn times..
        /// </summary>
        internal static string mp_disable_respawn_times {
            get {
                return ResourceManager.GetString("mp_disable_respawn_times", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for managing idle players..
        /// </summary>
        internal static string mp_idledealmethod {
            get {
                return ResourceManager.GetString("mp_idledealmethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarts the round and resets the round time..
        /// </summary>
        internal static string mp_restartgame {
            get {
                return ResourceManager.GetString("mp_restartgame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scramble the teams and restart the game..
        /// </summary>
        internal static string mp_scrambleteams {
            get {
                return ResourceManager.GetString("mp_scrambleteams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server will automatically scramble the teams if criteria met. Only works on dedicated servers..
        /// </summary>
        internal static string mp_scrambleteams_auto {
            get {
                return ResourceManager.GetString("mp_scrambleteams_auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of round wins a team must lead by in order to trigger an auto scramble..
        /// </summary>
        internal static string mp_scrambleteams_auto_windifference {
            get {
                return ResourceManager.GetString("mp_scrambleteams_auto_windifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for team force balance..
        /// </summary>
        internal static string mp_teams_unbalance_limit {
            get {
                return ResourceManager.GetString("mp_teams_unbalance_limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for map timelimit..
        /// </summary>
        internal static string mp_timelimit {
            get {
                return ResourceManager.GetString("mp_timelimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 - makes use of the high-polygon class models used in the &apos;Meet the Team&apos; videos..
        /// </summary>
        internal static string mp_usehwmmodels {
            get {
                return ResourceManager.GetString("mp_usehwmmodels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 - makes use of the high-polygon class models used in the &apos;Meet the Team&apos; videos..
        /// </summary>
        internal static string mp_usehwmvcds {
            get {
                return ResourceManager.GetString("mp_usehwmvcds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 - cancels &quot;waiting for players...&quot; time..
        /// </summary>
        internal static string mp_waitingforplayerscancel {
            get {
                return ResourceManager.GetString("mp_waitingforplayerscancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Depending on the input value, different amounts of information will be shown such as ping, fps, lerp, packet loss, etc..
        /// </summary>
        internal static string net_graph {
            get {
                return ResourceManager.GetString("net_graph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the next map to be played..
        /// </summary>
        internal static string nextlevel {
            get {
                return ResourceManager.GetString("nextlevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turns viewmodels on and off..
        /// </summary>
        internal static string r_drawviewmodel {
            get {
                return ResourceManager.GetString("r_drawviewmodel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes an rcon command..
        /// </summary>
        internal static string rcon {
            get {
                return ResourceManager.GetString("rcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the server address to send rcon commands to (if not set, console sends the command to the server that the player is currently in instead)..
        /// </summary>
        internal static string rcon_address {
            get {
                return ResourceManager.GetString("rcon_address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gives player access to rcon commands..
        /// </summary>
        internal static string rcon_password {
            get {
                return ResourceManager.GetString("rcon_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Records a demo..
        /// </summary>
        internal static string record {
            get {
                return ResourceManager.GetString("record", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarts the current server..
        /// </summary>
        internal static string restart {
            get {
                return ResourceManager.GetString("restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry connection to last server..
        /// </summary>
        internal static string retry {
            get {
                return ResourceManager.GetString("retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens up the source recorder during demo play back and allows for high quality avi format recording..
        /// </summary>
        internal static string startmovie {
            get {
                return ResourceManager.GetString("startmovie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display map and connection status..
        /// </summary>
        internal static string status {
            get {
                return ResourceManager.GetString("status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the recording of a demo..
        /// </summary>
        internal static string stop {
            get {
                return ResourceManager.GetString("stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow voting?.
        /// </summary>
        internal static string sv_allow_votes {
            get {
                return ResourceManager.GetString("sv_allow_votes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bounce multiplier for when physically simulated objects collide with other objects..
        /// </summary>
        internal static string sv_bounce {
            get {
                return ResourceManager.GetString("sv_bounce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns cheats off/on..
        /// </summary>
        internal static string sv_cheats {
            get {
                return ResourceManager.GetString("sv_cheats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for local area network..
        /// </summary>
        internal static string sv_lan {
            get {
                return ResourceManager.GetString("sv_lan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for managing custom content..
        /// </summary>
        internal static string sv_pure {
            get {
                return ResourceManager.GetString("sv_pure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use new voice codec instead of old..
        /// </summary>
        internal static string sv_use_steam_voice {
            get {
                return ResourceManager.GetString("sv_use_steam_voice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow spectators to vote?.
        /// </summary>
        internal static string sv_vote_allow_specators {
            get {
                return ResourceManager.GetString("sv_vote_allow_specators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A vote that fails cannot be voted on again during this period..
        /// </summary>
        internal static string sv_vote_failure_timer {
            get {
                return ResourceManager.GetString("sv_vote_failure_timer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to change levels?.
        /// </summary>
        internal static string sv_vote_issue_changelevel_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_changelevel_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to kick players from the server?.
        /// </summary>
        internal static string sv_vote_issue_kick_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_kick_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to set the next level?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to extend the current map?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_allowextend {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_allowextend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present players with a list of maps with the lowest playtimes to choose from?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_choicesmode {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_choicesmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent voting on the next level if one has already been set..
        /// </summary>
        internal static string sv_vote_issue_nextlevel_prevent_change {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_prevent_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to restart the game?.
        /// </summary>
        internal static string sv_vote_issue_restart_game_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_restart_game_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to scramble the teams?.
        /// </summary>
        internal static string sv_vote_issue_scramble_teams_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_scramble_teams_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long should a kick vote ban someone from the server? (in minutes).
        /// </summary>
        internal static string sv_vote_kick_ban_duration {
            get {
                return ResourceManager.GetString("sv_vote_kick_ban_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - disallows/allows the +use command on a server, useful for some custom maps, standard is 0..
        /// </summary>
        internal static string tf_allow_player_use {
            get {
                return ResourceManager.GetString("tf_allow_player_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teams will be scrambled if one team reaches this streak..
        /// </summary>
        internal static string tf_arena_max_streak {
            get {
                return ResourceManager.GetString("tf_arena_max_streak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns random damage-spread (+-10%) for weapons off/on..
        /// </summary>
        internal static string tf_damage_disablespread {
            get {
                return ResourceManager.GetString("tf_damage_disablespread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the pitch when doing maximum damage with your weapon, a lower pitch is recommended in most cases, standard is 100..
        /// </summary>
        internal static string tf_dingaling_pitchmaxdmg {
            get {
                return ResourceManager.GetString("tf_dingaling_pitchmaxdmg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the pitch when doing minimum damage with your weapon, a higher pitch is recommended in most cases, standard is 100..
        /// </summary>
        internal static string tf_dingaling_pitchmindmg {
            get {
                return ResourceManager.GetString("tf_dingaling_pitchmindmg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the volume for hit sounds, standard is 1.00..
        /// </summary>
        internal static string tf_dingaling_volume {
            get {
                return ResourceManager.GetString("tf_dingaling_volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows using a custom hit sound. No longer used. To use a custom hit sound, rename your sound file &quot;hitsound.wav&quot;, and place it in the &quot;tf/sound/ui/&quot; folder..
        /// </summary>
        internal static string tf_dingaling_wav_override {
            get {
                return ResourceManager.GetString("tf_dingaling_wav_override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns weapon hit sound off/on..
        /// </summary>
        internal static string tf_dingalingaling {
            get {
                return ResourceManager.GetString("tf_dingalingaling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/2/3 - enables holiday mode (0 = default; 2 = halloween; 3 = birthday)..
        /// </summary>
        internal static string tf_forced_holiday {
            get {
                return ResourceManager.GetString("tf_forced_holiday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - enables Medieval mode on the server, requires map change to take effect..
        /// </summary>
        internal static string tf_medieval {
            get {
                return ResourceManager.GetString("tf_medieval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - enables/disables automatic medieval-style text modification in the chat box..
        /// </summary>
        internal static string tf_medieval_autorp {
            get {
                return ResourceManager.GetString("tf_medieval_autorp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - toggles third person view during Medieval mode..
        /// </summary>
        internal static string tf_medieval_thirdperson {
            get {
                return ResourceManager.GetString("tf_medieval_thirdperson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns automatic healing without holding the left mouse button off/on..
        /// </summary>
        internal static string tf_medigun_autoheal {
            get {
                return ResourceManager.GetString("tf_medigun_autoheal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns endless shouting of &quot;OVERTIME!&quot; in Overtime off/on..
        /// </summary>
        internal static string tf_overtime_nag {
            get {
                return ResourceManager.GetString("tf_overtime_nag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner&apos;s SteamID..
        /// </summary>
        internal static string tf_server_identity_account_id {
            get {
                return ResourceManager.GetString("tf_server_identity_account_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner&apos;s identity token..
        /// </summary>
        internal static string tf_server_identity_token {
            get {
                return ResourceManager.GetString("tf_server_identity_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns fixed, consistent spread for weapons like Shotgun, Scattergun and Shortstop off/on..
        /// </summary>
        internal static string tf_use_fixed_weaponspreads {
            get {
                return ResourceManager.GetString("tf_use_fixed_weaponspreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns random criticals off/on..
        /// </summary>
        internal static string tf_weapon_criticals {
            get {
                return ResourceManager.GetString("tf_weapon_criticals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbinds a key..
        /// </summary>
        internal static string unbind {
            get {
                return ResourceManager.GetString("unbind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used to equip the specified weapon or execute action..
        /// </summary>
        internal static string use {
            get {
                return ResourceManager.GetString("use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets distance in which your weapons are drawn, higher values show more of the weapon and arms but may show missing parts..
        /// </summary>
        internal static string viewmodel_fov {
            get {
                return ResourceManager.GetString("viewmodel_fov", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the ratio of sensitivity while zoomed in with the Sniper Rifle with accordance to actual sensitivity..
        /// </summary>
        internal static string zoom_sensitivity_ratio {
            get {
                return ResourceManager.GetString("zoom_sensitivity_ratio", resourceCulture);
            }
        }
    }
}
