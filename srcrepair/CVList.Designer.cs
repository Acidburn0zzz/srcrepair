//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace srcrepair {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CVList {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CVList() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("srcrepair.CVList", typeof(CVList).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create identity for dedicated server..
        /// </summary>
        internal static string cl_gameserver_create_identity {
            get {
                return ResourceManager.GetString("cl_gameserver_create_identity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List all of the game server accounts owned by the currently logged in Steam account..
        /// </summary>
        internal static string cl_gameserver_list {
            get {
                return ResourceManager.GetString("cl_gameserver_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the amount of healing done per second..
        /// </summary>
        internal static string hud_combattext_healing {
            get {
                return ResourceManager.GetString("hud_combattext_healing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow voting?.
        /// </summary>
        internal static string sv_allow_votes {
            get {
                return ResourceManager.GetString("sv_allow_votes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use new voice codec instead of old..
        /// </summary>
        internal static string sv_use_steam_voice {
            get {
                return ResourceManager.GetString("sv_use_steam_voice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow spectators to vote?.
        /// </summary>
        internal static string sv_vote_allow_specators {
            get {
                return ResourceManager.GetString("sv_vote_allow_specators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A vote that fails cannot be voted on again during this period..
        /// </summary>
        internal static string sv_vote_failure_timer {
            get {
                return ResourceManager.GetString("sv_vote_failure_timer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to change levels?.
        /// </summary>
        internal static string sv_vote_issue_changelevel_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_changelevel_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to kick players from the server?.
        /// </summary>
        internal static string sv_vote_issue_kick_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_kick_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to set the next level?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to extend the current map?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_allowextend {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_allowextend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present players with a list of maps with the lowest playtimes to choose from?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_choicesmode {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_choicesmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to restart the game?.
        /// </summary>
        internal static string sv_vote_issue_restart_game_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_restart_game_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to scramble the teams?.
        /// </summary>
        internal static string sv_vote_issue_scramble_teams_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_scramble_teams_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long should a kick vote ban someone from the server? (in minutes).
        /// </summary>
        internal static string sv_vote_kick_ban_duration {
            get {
                return ResourceManager.GetString("sv_vote_kick_ban_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner&apos;s SteamID..
        /// </summary>
        internal static string tf_server_identity_account_id {
            get {
                return ResourceManager.GetString("tf_server_identity_account_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner&apos;s identity token..
        /// </summary>
        internal static string tf_server_identity_token {
            get {
                return ResourceManager.GetString("tf_server_identity_token", resourceCulture);
            }
        }
    }
}
